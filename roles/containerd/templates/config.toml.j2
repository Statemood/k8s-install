version = 2
root = "{{ containerd.root | default("/var/lib/containerd") }}"
state = "{{ containerd.state | default("/run/containerd") }}"
oom_score = {{ containerd.oom_score | default(0) }}

[grpc]
  address = "{{ containerd.state | default("/run/containerd") }}/containerd.sock"
  max_recv_message_size = {{ containerd.grpc.max_recv_message_size }}
  max_send_message_size = {{ containerd.grpc.max_send_message_size }}

[debug]
  address = "{{ containerd.debug.address }}"
  level = "{{ containerd.debug.level }}"
  format = "{{ containerd.debug.format }}"
  uid = {{ containerd.debug.uid }}
  gid = {{ containerd.debug.gid }}

[metrics]
  address = "{{ containerd.metrics.address | default('') }}"
  grpc_histogram = {{ containerd.metrics.grpc_histogram | default(false) | lower }}

[plugins]

  [plugins."io.containerd.gc.v1.scheduler"]
    deletion_threshold = 0
    mutation_threshold = 100
    pause_threshold = 0.02
    schedule_delay = "0s"
    startup_delay = "100ms"

  [plugins."io.containerd.grpc.v1.cri"]
    sandbox_image = "{{ containerd.cri.sandbox_image.repo }}:{{ containerd.cri.sandbox_image.tag }}"
    max_container_log_line_size = {{ containerd.cri.max_container_log_line_size }}
    enable_selinux = {{ containerd.cri.enable_selinux | lower }}
    disable_apparmor = {{ containerd.cri.disable_apparmor | lower }}
{% if containerd.cri.enable_cdi %}
    enable_cdi = true
    cdi_spec_dirs = ["/etc/cdi", "/var/run/cdi"]
{% endif %}

    [plugins."io.containerd.grpc.v1.cri".cni]
      bin_dir = "/opt/cni/bin"
      conf_dir = "/etc/cni/net.d"
      conf_template = ""
      max_conf_num = 1

    [plugins."io.containerd.grpc.v1.cri".containerd]
{% if gpu is defined and  gpu == 'true' %}
      default_runtime_name = "nvidia"
{% else %}
      default_runtime_name = "runc"
{% endif %}
      snapshotter = "{{ containerd.containerd.snapshotter | default("overlayfs") }}"
      discard_unpacked_layers = {{ containerd.containerd.discard_unpacked_layers | lower }}

      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
{% if gpu is defined and  gpu == 'true' %}
        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia]
          privileged_without_host_devices = false
          runtime_engine = ""
          runtime_root = ""
          runtime_type = "io.containerd.runc.v2"

          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia.options]
            BinaryName = "/usr/bin/nvidia-container-runtime"
{% if 'options' in containerd %}
{% for param, value in containerd.options.items() %}
            {{ param }} = {{ value | lower }}
{% endfor %}
{% endif %}
{% else %}
        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
          base_runtime_spec = ""
          container_annotations = []
          pod_annotations = []
          privileged_without_host_devices = false
          runtime_engine = ""
          runtime_root = ""
          runtime_type = "io.containerd.runc.v2"

          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
{% if 'options' in containerd %}
{% for param, value in containerd.options.items() %}
            {{ param }} = {{ value | lower }}
{% endfor %}
{% endif %}
{% endif %}

    [plugins."io.containerd.grpc.v1.cri".registry]
      config_path = "{{ containerd.cfg_dir }}/certs.d"
{% for registry in containerd.registry_auth if registry['registry'] is defined %}
{% if (registry['username'] is defined and registry['password'] is defined) or registry['auth'] is defined %}
      [plugins."io.containerd.grpc.v1.cri".registry.configs."{{ registry['registry'] }}".auth]
{% if registry['username'] is defined and registry['password'] is defined %}
        password = "{{ registry['password'] }}"
        username = "{{ registry['username'] }}"
{% else %}
        auth = "{{ registry['auth'] }}"
{% endif %}
{% endif %}
{% endfor %}

  [plugins."io.containerd.internal.v1.opt"]
    path = "/opt/containerd"

  [plugins."io.containerd.internal.v1.restart"]
    interval = "10s"

{% if containerd.nri.enabled and containerd.version is version('1.7.0', '>=') %}
  [plugins."io.containerd.nri.v1.nri"]
    disable = false
{% endif %}
